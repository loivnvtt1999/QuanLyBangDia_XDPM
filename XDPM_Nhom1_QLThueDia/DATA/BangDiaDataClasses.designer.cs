#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DATA
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DB_BangDia")]
	public partial class BangDiaDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDia(Dia instance);
    partial void UpdateDia(Dia instance);
    partial void DeleteDia(Dia instance);
    partial void InsertTieuDe(TieuDe instance);
    partial void UpdateTieuDe(TieuDe instance);
    partial void DeleteTieuDe(TieuDe instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiDia(LoaiDia instance);
    partial void UpdateLoaiDia(LoaiDia instance);
    partial void DeleteLoaiDia(LoaiDia instance);
    partial void InsertPhieuDat(PhieuDat instance);
    partial void UpdatePhieuDat(PhieuDat instance);
    partial void DeletePhieuDat(PhieuDat instance);
    partial void InsertPhieuThue(PhieuThue instance);
    partial void UpdatePhieuThue(PhieuThue instance);
    partial void DeletePhieuThue(PhieuThue instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    #endregion
		
		public BangDiaDataClassesDataContext() : 
				base(global::DATA.Properties.Settings.Default.DB_BangDiaConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public BangDiaDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BangDiaDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BangDiaDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BangDiaDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Dia> Dias
		{
			get
			{
				return this.GetTable<Dia>();
			}
		}
		
		public System.Data.Linq.Table<TieuDe> TieuDes
		{
			get
			{
				return this.GetTable<TieuDe>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiDia> LoaiDias
		{
			get
			{
				return this.GetTable<LoaiDia>();
			}
		}
		
		public System.Data.Linq.Table<PhieuDat> PhieuDats
		{
			get
			{
				return this.GetTable<PhieuDat>();
			}
		}
		
		public System.Data.Linq.Table<PhieuThue> PhieuThues
		{
			get
			{
				return this.GetTable<PhieuThue>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Dias")]
	public partial class Dia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDia;
		
		private string _TenDia;
		
		private string _TrangThaiDia;
		
		private string _MaTieuDe;
		
		private EntitySet<PhieuThue> _PhieuThues;
		
		private EntityRef<TieuDe> _TieuDe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDiaChanging(string value);
    partial void OnMaDiaChanged();
    partial void OnTenDiaChanging(string value);
    partial void OnTenDiaChanged();
    partial void OnTrangThaiDiaChanging(string value);
    partial void OnTrangThaiDiaChanged();
    partial void OnMaTieuDeChanging(string value);
    partial void OnMaTieuDeChanged();
    #endregion
		
		public Dia()
		{
			this._PhieuThues = new EntitySet<PhieuThue>(new Action<PhieuThue>(this.attach_PhieuThues), new Action<PhieuThue>(this.detach_PhieuThues));
			this._TieuDe = default(EntityRef<TieuDe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDia", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDia
		{
			get
			{
				return this._MaDia;
			}
			set
			{
				if ((this._MaDia != value))
				{
					this.OnMaDiaChanging(value);
					this.SendPropertyChanging();
					this._MaDia = value;
					this.SendPropertyChanged("MaDia");
					this.OnMaDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDia
		{
			get
			{
				return this._TenDia;
			}
			set
			{
				if ((this._TenDia != value))
				{
					this.OnTenDiaChanging(value);
					this.SendPropertyChanging();
					this._TenDia = value;
					this.SendPropertyChanged("TenDia");
					this.OnTenDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiDia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrangThaiDia
		{
			get
			{
				return this._TrangThaiDia;
			}
			set
			{
				if ((this._TrangThaiDia != value))
				{
					this.OnTrangThaiDiaChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiDia = value;
					this.SendPropertyChanged("TrangThaiDia");
					this.OnTrangThaiDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTieuDe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaTieuDe
		{
			get
			{
				return this._MaTieuDe;
			}
			set
			{
				if ((this._MaTieuDe != value))
				{
					if (this._TieuDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTieuDeChanging(value);
					this.SendPropertyChanging();
					this._MaTieuDe = value;
					this.SendPropertyChanged("MaTieuDe");
					this.OnMaTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dia_PhieuThue", Storage="_PhieuThues", ThisKey="MaDia", OtherKey="MaDia")]
		public EntitySet<PhieuThue> PhieuThues
		{
			get
			{
				return this._PhieuThues;
			}
			set
			{
				this._PhieuThues.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TieuDe_Dia", Storage="_TieuDe", ThisKey="MaTieuDe", OtherKey="MaTieuDe", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TieuDe TieuDe
		{
			get
			{
				return this._TieuDe.Entity;
			}
			set
			{
				TieuDe previousValue = this._TieuDe.Entity;
				if (((previousValue != value) 
							|| (this._TieuDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TieuDe.Entity = null;
						previousValue.Dias.Remove(this);
					}
					this._TieuDe.Entity = value;
					if ((value != null))
					{
						value.Dias.Add(this);
						this._MaTieuDe = value.MaTieuDe;
					}
					else
					{
						this._MaTieuDe = default(string);
					}
					this.SendPropertyChanged("TieuDe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuThues(PhieuThue entity)
		{
			this.SendPropertyChanging();
			entity.Dia = this;
		}
		
		private void detach_PhieuThues(PhieuThue entity)
		{
			this.SendPropertyChanging();
			entity.Dia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TieuDes")]
	public partial class TieuDe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTieuDe;
		
		private string _TenTieuDe;
		
		private string _NhaSanXuat;
		
		private string _MaLoaiDia;
		
		private EntitySet<Dia> _Dias;
		
		private EntitySet<PhieuDat> _PhieuDats;
		
		private EntityRef<LoaiDia> _LoaiDia;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTieuDeChanging(string value);
    partial void OnMaTieuDeChanged();
    partial void OnTenTieuDeChanging(string value);
    partial void OnTenTieuDeChanged();
    partial void OnNhaSanXuatChanging(string value);
    partial void OnNhaSanXuatChanged();
    partial void OnMaLoaiDiaChanging(string value);
    partial void OnMaLoaiDiaChanged();
    #endregion
		
		public TieuDe()
		{
			this._Dias = new EntitySet<Dia>(new Action<Dia>(this.attach_Dias), new Action<Dia>(this.detach_Dias));
			this._PhieuDats = new EntitySet<PhieuDat>(new Action<PhieuDat>(this.attach_PhieuDats), new Action<PhieuDat>(this.detach_PhieuDats));
			this._LoaiDia = default(EntityRef<LoaiDia>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTieuDe", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTieuDe
		{
			get
			{
				return this._MaTieuDe;
			}
			set
			{
				if ((this._MaTieuDe != value))
				{
					this.OnMaTieuDeChanging(value);
					this.SendPropertyChanging();
					this._MaTieuDe = value;
					this.SendPropertyChanged("MaTieuDe");
					this.OnMaTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTieuDe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTieuDe
		{
			get
			{
				return this._TenTieuDe;
			}
			set
			{
				if ((this._TenTieuDe != value))
				{
					this.OnTenTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TenTieuDe = value;
					this.SendPropertyChanged("TenTieuDe");
					this.OnTenTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NhaSanXuat", DbType="NVarChar(50)")]
		public string NhaSanXuat
		{
			get
			{
				return this._NhaSanXuat;
			}
			set
			{
				if ((this._NhaSanXuat != value))
				{
					this.OnNhaSanXuatChanging(value);
					this.SendPropertyChanging();
					this._NhaSanXuat = value;
					this.SendPropertyChanged("NhaSanXuat");
					this.OnNhaSanXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiDia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaLoaiDia
		{
			get
			{
				return this._MaLoaiDia;
			}
			set
			{
				if ((this._MaLoaiDia != value))
				{
					if (this._LoaiDia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiDiaChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiDia = value;
					this.SendPropertyChanged("MaLoaiDia");
					this.OnMaLoaiDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TieuDe_Dia", Storage="_Dias", ThisKey="MaTieuDe", OtherKey="MaTieuDe")]
		public EntitySet<Dia> Dias
		{
			get
			{
				return this._Dias;
			}
			set
			{
				this._Dias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TieuDe_PhieuDat", Storage="_PhieuDats", ThisKey="MaTieuDe", OtherKey="MaTieuDe")]
		public EntitySet<PhieuDat> PhieuDats
		{
			get
			{
				return this._PhieuDats;
			}
			set
			{
				this._PhieuDats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiDia_TieuDe", Storage="_LoaiDia", ThisKey="MaLoaiDia", OtherKey="MaLoaiDia", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public LoaiDia LoaiDia
		{
			get
			{
				return this._LoaiDia.Entity;
			}
			set
			{
				LoaiDia previousValue = this._LoaiDia.Entity;
				if (((previousValue != value) 
							|| (this._LoaiDia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiDia.Entity = null;
						previousValue.TieuDes.Remove(this);
					}
					this._LoaiDia.Entity = value;
					if ((value != null))
					{
						value.TieuDes.Add(this);
						this._MaLoaiDia = value.MaLoaiDia;
					}
					else
					{
						this._MaLoaiDia = default(string);
					}
					this.SendPropertyChanged("LoaiDia");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Dias(Dia entity)
		{
			this.SendPropertyChanging();
			entity.TieuDe = this;
		}
		
		private void detach_Dias(Dia entity)
		{
			this.SendPropertyChanging();
			entity.TieuDe = null;
		}
		
		private void attach_PhieuDats(PhieuDat entity)
		{
			this.SendPropertyChanging();
			entity.TieuDe = this;
		}
		
		private void detach_PhieuDats(PhieuDat entity)
		{
			this.SendPropertyChanging();
			entity.TieuDe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHangs")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhachHang;
		
		private string _HoTen;
		
		private string _DiaChi;
		
		private string _SDT;
		
		private EntitySet<PhieuDat> _PhieuDats;
		
		private EntitySet<PhieuThue> _PhieuThues;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachHangChanging(string value);
    partial void OnMaKhachHangChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    #endregion
		
		public KhachHang()
		{
			this._PhieuDats = new EntitySet<PhieuDat>(new Action<PhieuDat>(this.attach_PhieuDats), new Action<PhieuDat>(this.detach_PhieuDats));
			this._PhieuThues = new EntitySet<PhieuThue>(new Action<PhieuThue>(this.attach_PhieuThues), new Action<PhieuThue>(this.detach_PhieuThues));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(250)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(20)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuDat", Storage="_PhieuDats", ThisKey="MaKhachHang", OtherKey="MaKhachHang")]
		public EntitySet<PhieuDat> PhieuDats
		{
			get
			{
				return this._PhieuDats;
			}
			set
			{
				this._PhieuDats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuThue", Storage="_PhieuThues", ThisKey="MaKhachHang", OtherKey="MaKhachHang")]
		public EntitySet<PhieuThue> PhieuThues
		{
			get
			{
				return this._PhieuThues;
			}
			set
			{
				this._PhieuThues.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PhieuDats(PhieuDat entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_PhieuDats(PhieuDat entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
		
		private void attach_PhieuThues(PhieuThue entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_PhieuThues(PhieuThue entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiDias")]
	public partial class LoaiDia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiDia;
		
		private string _TenLoaiDia;
		
		private int _ThoiGianThue;
		
		private double _GiaThue;
		
		private double _GiaPhat;
		
		private EntitySet<TieuDe> _TieuDes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiDiaChanging(string value);
    partial void OnMaLoaiDiaChanged();
    partial void OnTenLoaiDiaChanging(string value);
    partial void OnTenLoaiDiaChanged();
    partial void OnThoiGianThueChanging(int value);
    partial void OnThoiGianThueChanged();
    partial void OnGiaThueChanging(double value);
    partial void OnGiaThueChanged();
    partial void OnGiaPhatChanging(double value);
    partial void OnGiaPhatChanged();
    #endregion
		
		public LoaiDia()
		{
			this._TieuDes = new EntitySet<TieuDe>(new Action<TieuDe>(this.attach_TieuDes), new Action<TieuDe>(this.detach_TieuDes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiDia", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiDia
		{
			get
			{
				return this._MaLoaiDia;
			}
			set
			{
				if ((this._MaLoaiDia != value))
				{
					this.OnMaLoaiDiaChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiDia = value;
					this.SendPropertyChanged("MaLoaiDia");
					this.OnMaLoaiDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiDia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenLoaiDia
		{
			get
			{
				return this._TenLoaiDia;
			}
			set
			{
				if ((this._TenLoaiDia != value))
				{
					this.OnTenLoaiDiaChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiDia = value;
					this.SendPropertyChanged("TenLoaiDia");
					this.OnTenLoaiDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianThue", DbType="Int NOT NULL")]
		public int ThoiGianThue
		{
			get
			{
				return this._ThoiGianThue;
			}
			set
			{
				if ((this._ThoiGianThue != value))
				{
					this.OnThoiGianThueChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianThue = value;
					this.SendPropertyChanged("ThoiGianThue");
					this.OnThoiGianThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaThue", DbType="Float NOT NULL")]
		public double GiaThue
		{
			get
			{
				return this._GiaThue;
			}
			set
			{
				if ((this._GiaThue != value))
				{
					this.OnGiaThueChanging(value);
					this.SendPropertyChanging();
					this._GiaThue = value;
					this.SendPropertyChanged("GiaThue");
					this.OnGiaThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaPhat", DbType="Float NOT NULL")]
		public double GiaPhat
		{
			get
			{
				return this._GiaPhat;
			}
			set
			{
				if ((this._GiaPhat != value))
				{
					this.OnGiaPhatChanging(value);
					this.SendPropertyChanging();
					this._GiaPhat = value;
					this.SendPropertyChanged("GiaPhat");
					this.OnGiaPhatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiDia_TieuDe", Storage="_TieuDes", ThisKey="MaLoaiDia", OtherKey="MaLoaiDia")]
		public EntitySet<TieuDe> TieuDes
		{
			get
			{
				return this._TieuDes;
			}
			set
			{
				this._TieuDes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TieuDes(TieuDe entity)
		{
			this.SendPropertyChanging();
			entity.LoaiDia = this;
		}
		
		private void detach_TieuDes(TieuDe entity)
		{
			this.SendPropertyChanging();
			entity.LoaiDia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuDats")]
	public partial class PhieuDat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaDat;
		
		private System.DateTime _NgayDat;
		
		private string _TrangThai;
		
		private string _MaKhachHang;
		
		private string _MaTieuDe;
		
		private string _MaDia;
		
		private EntityRef<KhachHang> _KhachHang;
		
		private EntityRef<TieuDe> _TieuDe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDatChanging(string value);
    partial void OnMaDatChanged();
    partial void OnNgayDatChanging(System.DateTime value);
    partial void OnNgayDatChanged();
    partial void OnTrangThaiChanging(string value);
    partial void OnTrangThaiChanged();
    partial void OnMaKhachHangChanging(string value);
    partial void OnMaKhachHangChanged();
    partial void OnMaTieuDeChanging(string value);
    partial void OnMaTieuDeChanged();
    partial void OnMaDiaChanging(string value);
    partial void OnMaDiaChanged();
    #endregion
		
		public PhieuDat()
		{
			this._KhachHang = default(EntityRef<KhachHang>);
			this._TieuDe = default(EntityRef<TieuDe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDat", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaDat
		{
			get
			{
				return this._MaDat;
			}
			set
			{
				if ((this._MaDat != value))
				{
					this.OnMaDatChanging(value);
					this.SendPropertyChanging();
					this._MaDat = value;
					this.SendPropertyChanged("MaDat");
					this.OnMaDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="DateTime NOT NULL")]
		public System.DateTime NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTieuDe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaTieuDe
		{
			get
			{
				return this._MaTieuDe;
			}
			set
			{
				if ((this._MaTieuDe != value))
				{
					if (this._TieuDe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTieuDeChanging(value);
					this.SendPropertyChanging();
					this._MaTieuDe = value;
					this.SendPropertyChanged("MaTieuDe");
					this.OnMaTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDia", DbType="NVarChar(50)")]
		public string MaDia
		{
			get
			{
				return this._MaDia;
			}
			set
			{
				if ((this._MaDia != value))
				{
					this.OnMaDiaChanging(value);
					this.SendPropertyChanging();
					this._MaDia = value;
					this.SendPropertyChanged("MaDia");
					this.OnMaDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuDat", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="MaKhachHang", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.PhieuDats.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.PhieuDats.Add(this);
						this._MaKhachHang = value.MaKhachHang;
					}
					else
					{
						this._MaKhachHang = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TieuDe_PhieuDat", Storage="_TieuDe", ThisKey="MaTieuDe", OtherKey="MaTieuDe", IsForeignKey=true)]
		public TieuDe TieuDe
		{
			get
			{
				return this._TieuDe.Entity;
			}
			set
			{
				TieuDe previousValue = this._TieuDe.Entity;
				if (((previousValue != value) 
							|| (this._TieuDe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TieuDe.Entity = null;
						previousValue.PhieuDats.Remove(this);
					}
					this._TieuDe.Entity = value;
					if ((value != null))
					{
						value.PhieuDats.Add(this);
						this._MaTieuDe = value.MaTieuDe;
					}
					else
					{
						this._MaTieuDe = default(string);
					}
					this.SendPropertyChanged("TieuDe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PhieuThues")]
	public partial class PhieuThue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaThue;
		
		private double _GiaThue;
		
		private string _TrangThaiThue;
		
		private System.DateTime _NgayMuon;
		
		private System.DateTime _NgayHenTra;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private System.Nullable<double> _PhiTraMuon;
		
		private string _TrangThaiPhi;
		
		private string _MaDia;
		
		private string _MaKhachHang;
		
		private EntityRef<Dia> _Dia;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaThueChanging(string value);
    partial void OnMaThueChanged();
    partial void OnGiaThueChanging(double value);
    partial void OnGiaThueChanged();
    partial void OnTrangThaiThueChanging(string value);
    partial void OnTrangThaiThueChanged();
    partial void OnNgayMuonChanging(System.DateTime value);
    partial void OnNgayMuonChanged();
    partial void OnNgayHenTraChanging(System.DateTime value);
    partial void OnNgayHenTraChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    partial void OnPhiTraMuonChanging(System.Nullable<double> value);
    partial void OnPhiTraMuonChanged();
    partial void OnTrangThaiPhiChanging(string value);
    partial void OnTrangThaiPhiChanged();
    partial void OnMaDiaChanging(string value);
    partial void OnMaDiaChanged();
    partial void OnMaKhachHangChanging(string value);
    partial void OnMaKhachHangChanged();
    #endregion
		
		public PhieuThue()
		{
			this._Dia = default(EntityRef<Dia>);
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaThue", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaThue
		{
			get
			{
				return this._MaThue;
			}
			set
			{
				if ((this._MaThue != value))
				{
					this.OnMaThueChanging(value);
					this.SendPropertyChanging();
					this._MaThue = value;
					this.SendPropertyChanged("MaThue");
					this.OnMaThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaThue", DbType="Float NOT NULL")]
		public double GiaThue
		{
			get
			{
				return this._GiaThue;
			}
			set
			{
				if ((this._GiaThue != value))
				{
					this.OnGiaThueChanging(value);
					this.SendPropertyChanging();
					this._GiaThue = value;
					this.SendPropertyChanged("GiaThue");
					this.OnGiaThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiThue", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TrangThaiThue
		{
			get
			{
				return this._TrangThaiThue;
			}
			set
			{
				if ((this._TrangThaiThue != value))
				{
					this.OnTrangThaiThueChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiThue = value;
					this.SendPropertyChanged("TrangThaiThue");
					this.OnTrangThaiThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayMuon", DbType="DateTime NOT NULL")]
		public System.DateTime NgayMuon
		{
			get
			{
				return this._NgayMuon;
			}
			set
			{
				if ((this._NgayMuon != value))
				{
					this.OnNgayMuonChanging(value);
					this.SendPropertyChanging();
					this._NgayMuon = value;
					this.SendPropertyChanged("NgayMuon");
					this.OnNgayMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayHenTra", DbType="DateTime NOT NULL")]
		public System.DateTime NgayHenTra
		{
			get
			{
				return this._NgayHenTra;
			}
			set
			{
				if ((this._NgayHenTra != value))
				{
					this.OnNgayHenTraChanging(value);
					this.SendPropertyChanging();
					this._NgayHenTra = value;
					this.SendPropertyChanged("NgayHenTra");
					this.OnNgayHenTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhiTraMuon", DbType="Float")]
		public System.Nullable<double> PhiTraMuon
		{
			get
			{
				return this._PhiTraMuon;
			}
			set
			{
				if ((this._PhiTraMuon != value))
				{
					this.OnPhiTraMuonChanging(value);
					this.SendPropertyChanging();
					this._PhiTraMuon = value;
					this.SendPropertyChanged("PhiTraMuon");
					this.OnPhiTraMuonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiPhi", DbType="NVarChar(50)")]
		public string TrangThaiPhi
		{
			get
			{
				return this._TrangThaiPhi;
			}
			set
			{
				if ((this._TrangThaiPhi != value))
				{
					this.OnTrangThaiPhiChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiPhi = value;
					this.SendPropertyChanged("TrangThaiPhi");
					this.OnTrangThaiPhiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDia", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaDia
		{
			get
			{
				return this._MaDia;
			}
			set
			{
				if ((this._MaDia != value))
				{
					if (this._Dia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDiaChanging(value);
					this.SendPropertyChanging();
					this._MaDia = value;
					this.SendPropertyChanged("MaDia");
					this.OnMaDiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Dia_PhieuThue", Storage="_Dia", ThisKey="MaDia", OtherKey="MaDia", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Dia Dia
		{
			get
			{
				return this._Dia.Entity;
			}
			set
			{
				Dia previousValue = this._Dia.Entity;
				if (((previousValue != value) 
							|| (this._Dia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Dia.Entity = null;
						previousValue.PhieuThues.Remove(this);
					}
					this._Dia.Entity = value;
					if ((value != null))
					{
						value.PhieuThues.Add(this);
						this._MaDia = value.MaDia;
					}
					else
					{
						this._MaDia = default(string);
					}
					this.SendPropertyChanged("Dia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_PhieuThue", Storage="_KhachHang", ThisKey="MaKhachHang", OtherKey="MaKhachHang", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.PhieuThues.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.PhieuThues.Add(this);
						this._MaKhachHang = value.MaKhachHang;
					}
					else
					{
						this._MaKhachHang = default(string);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoans")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TenDN;
		
		private string _MatKhau;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTenDNChanging(string value);
    partial void OnTenDNChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public TaiKhoan()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDN", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TenDN
		{
			get
			{
				return this._TenDN;
			}
			set
			{
				if ((this._TenDN != value))
				{
					this.OnTenDNChanging(value);
					this.SendPropertyChanging();
					this._TenDN = value;
					this.SendPropertyChanged("TenDN");
					this.OnTenDNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
